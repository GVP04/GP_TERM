// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "gpolefont.h"
#include "GP_Term.h"


/////////////////////////////////////////////////////////////////////////////
// GPCOleFont properties

CString GPCOleFont::GetName()
{
	CString result;
	GetProperty(0x0, VT_BSTR, (void*)&result);
	return result;
}

void GPCOleFont::SetName(LPCTSTR propVal)
{
	SetProperty(0x0, VT_BSTR, propVal);
}

CY GPCOleFont::GetSize()
{
	CY result;
	GetProperty(0x2, VT_CY, (void*)&result);
	return result;
}

void GPCOleFont::SetSize(const CY& propVal)
{
	SetProperty(0x2, VT_CY, &propVal);
}

BOOL GPCOleFont::GetBold()
{
	BOOL result;
	GetProperty(0x3, VT_BOOL, (void*)&result);
	return result;
}

void GPCOleFont::SetBold(BOOL propVal)
{
	SetProperty(0x3, VT_BOOL, propVal);
}

BOOL GPCOleFont::GetItalic()
{
	BOOL result;
	GetProperty(0x4, VT_BOOL, (void*)&result);
	return result;
}

void GPCOleFont::SetItalic(BOOL propVal)
{
	SetProperty(0x4, VT_BOOL, propVal);
}

BOOL GPCOleFont::GetUnderline()
{
	BOOL result;
	GetProperty(0x5, VT_BOOL, (void*)&result);
	return result;
}

void GPCOleFont::SetUnderline(BOOL propVal)
{
	SetProperty(0x5, VT_BOOL, propVal);
}

BOOL GPCOleFont::GetStrikethrough()
{
	BOOL result;
	GetProperty(0x6, VT_BOOL, (void*)&result);
	return result;
}

void GPCOleFont::SetStrikethrough(BOOL propVal)
{
	SetProperty(0x6, VT_BOOL, propVal);
}

short GPCOleFont::GetWeight()
{
	short result;
	GetProperty(0x7, VT_I2, (void*)&result);
	return result;
}

void GPCOleFont::SetWeight(short propVal)
{
	SetProperty(0x7, VT_I2, propVal);
}

short GPCOleFont::GetCharset()
{
	short result;
	GetProperty(0x8, VT_I2, (void*)&result);
	return result;
}

void GPCOleFont::SetCharset(short propVal)
{
	SetProperty(0x8, VT_I2, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// GPCOleFont operations

const CString GPCOleFont::GetFontDescription()
{
	CString res;

	CString tmp="";
	if (GetBold())			tmp+="BOLD ";
	if (GetItalic())		tmp+="ITALIC ";
	if (GetStrikethrough()) tmp+="STRIKE ";
	if (GetUnderline())		tmp+="UNDERLINE ";

	res="STYLE="+tmp+";";
	{
		CY rr;
		rr.int64=0;
		rr=GetSize();
		tmp.Format("SIZE=%g;",((double)rr.Lo)/10000.);
		res+=tmp;
	}

	{
		UINT cs=GetCharset();
		UINT i;
		for(i=0;i<18 && ulfCharSet[i]!=cs;i++);
		res+="CHARSET=";	
		if (i<18)	res+=clfCharSet[i];
		else		res+="UNKNOWN";
	}
	res+=";NAME="+GetName();
	tmp.Format(";WEIGHT=%d",GetWeight());
	res+=tmp;
	return res;
}

void GPCOleFont::SetFontFromString(const char *iStr)
{
	if (iStr!=NULL)
	{
		char *tmp=new char [(int)strlen(iStr)+50];
		static const char *nm[]={"STYLE=","SIZE=","CHARSET=","NAME=","WEIGHT="};
		strcpy(tmp,iStr);//_strupr(tmp);
		int i;
		for(i=0;i<5;i++)
		{
			char *posstart=NULL,*posend=NULL;
			if ((posstart=strstr(tmp,nm[i]))!=NULL)
			{
				posstart+=(int)strlen(nm[i]);
				if ((posend=strchr(posstart,';'))!=NULL) *posend=0;
				switch(i)
				{
				case 0: /*STYLE*/
					{
						_strupr(posstart);
//						static const char *nms[]={"BOLD","ITALIC","STRIKE","UNDERLINE",};
						SetBold			(strstr(posstart,"B") !=NULL);
						SetItalic		(strstr(posstart,"IT")!=NULL);
						SetStrikethrough(strstr(posstart,"S") !=NULL);
						SetUnderline	(strstr(posstart,"U") !=NULL);
					}
					break;
				case 1: /*SIZE*/
					{
						CY rr;
						rr=GetSize();
						rr.Lo=(long)(atof(posstart)*10000);
						SetSize(rr);
					}
					break;
				case 2: /*CHARSET*/
					{
						_strupr(posstart);
						UINT tmpcs=RUSSIAN_CHARSET;
						UINT i22;
						for(i22=0;i22<18 && strcmp(clfCharSet[i22],posstart)!=0;i22++);
						
						if (i22<18) tmpcs=ulfCharSet[i22];
						SetCharset((short)tmpcs);
					}
					break;
				case 3: /*NAME*/	SetName(posstart);					break;
				case 4: /*WEIGHT*/	SetWeight((short)atoi(posstart));	break;
				}
				if (posend) *posend=';';
			}
		}

		delete[] tmp;
	}
}
